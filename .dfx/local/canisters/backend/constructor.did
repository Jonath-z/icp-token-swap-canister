service : () -> {
  deposit : (
      record {
        fee : opt nat;
        token : principal;
        spender_subaccount : opt text;
        from : record { owner : principal; subaccount : opt vec nat8 };
        memo : vec nat8;
        created_at_time : opt nat64;
        amount : nat;
      },
      text,
    ) -> (
      variant {
        Ok : nat;
        Err : variant {
          GenericError : record { message : text; error_code : nat };
          TemporarilyUnavailable;
          InsufficientAllowance : record { allowance : nat };
          BadBurn : record { min_burn_amount : nat };
          Duplicate : record { duplicate_of : nat };
          BadFee : record { expected_fee : nat };
          CreatedInFuture : record { ledger_time : nat64 };
          TooOld;
          InsufficientFunds : record { balance : nat };
        };
      },
    );
  listBalances : () -> (text) query;
  swap : (text, text) -> (text);
  withdraw : (
      record {
        to : record { owner : principal; subaccount : opt vec nat8 };
        fee : opt nat;
        memo : opt vec nat8;
        from_subaccount : opt vec nat8;
        created_at_time : opt nat64;
        amount : nat;
      },
      text,
    ) -> (
      variant {
        Ok : nat;
        Err : variant {
          GenericError : record { message : text; error_code : nat };
          TemporarilyUnavailable;
          BadBurn : record { min_burn_amount : nat };
          Duplicate : record { duplicate_of : nat };
          BadFee : record { expected_fee : nat };
          CreatedInFuture : record { ledger_time : nat64 };
          TooOld;
          InsufficientFunds : record { balance : nat };
        };
      },
    );
}